version: '3'

services:
  # Kafka with KRaft
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kestra workflow orchestration
  kestra:
    image: kestra/kestra:latest
    container_name: kestra
    ports:
      - "8080:8080"
    environment:
      - KESTRA_CONFIGURATION=prod
      - KESTRA_REPOSITORY=postgres
      - KESTRA_POSTGRES_URL=jdbc:postgresql://kestra-postgres:5432/kestra
      - KESTRA_POSTGRES_USER=kestra
      - KESTRA_POSTGRES_PASSWORD=kestra
    depends_on:
      - kestra-postgres

  # Postgres for Kestra
  kestra-postgres:
    image: postgres:14
    container_name: kestra-postgres
    environment:
      - POSTGRES_USER=kestra
      - POSTGRES_PASSWORD=kestra
      - POSTGRES_DB=kestra
    volumes:
      - kestra-postgres-data:/var/lib/postgresql/data

  # Metabase for visualization
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=metabase
      - MB_DB_HOST=metabase-postgres
    depends_on:
      - metabase-postgres

  # Postgres for Metabase
  metabase-postgres:
    image: postgres:14
    container_name: metabase-postgres
    environment:
      - POSTGRES_USER=metabase
      - POSTGRES_PASSWORD=metabase
      - POSTGRES_DB=metabase
    volumes:
      - metabase-postgres-data:/var/lib/postgresql/data

volumes:
  kafka-data:
  kestra-postgres-data:
  metabase-postgres-data:
